{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","gifExpertApp.js","index.js"],"names":["AddCategory","setCategories","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,cAAcC,EAAiB,EAAjBA,WAExC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAuBA,OACQ,sBAAMC,SAjBO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BT,EAAc,CAACG,GAAF,mBAAgBF,KAC7BG,EAAc,KAIlBM,QAAQC,IAAI,iBAOR,SACI,uBACIC,KAAK,OACLC,MAAOV,EACPW,SA1BQ,SAACR,GACrBI,QAAQC,IAAIL,EAAES,OAAOF,OACrBT,EAAcE,EAAES,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CAEHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAgBZM,GAhBY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAEnC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECHwB,SAAEA,GAE1B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIvB,CAACpB,IAIIqB,EDlBwBK,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAIpB,OAFA3B,QAAQC,IAAI0B,GAGR,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAEjDoB,GAAY,mBAAGJ,UAAU,mCAAb,qBAGb,qBAAKA,UAAU,YAAf,SAGOH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,aAEIA,IAAKA,GACDA,GAFCA,EAAIC,aElBxBgB,EAAe,WAGxB,MAAoC1C,mBAAS,CAAC,kBAA9C,mBAAOD,EAAP,KAAmBD,EAAnB,KAQA,OACI,qCACI,8CACA,cAAC,EAAD,CACAA,cAAeA,EACfC,WAAYA,IAEZ,uBAGA,6BAEQA,EAAWyB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCxBlC4B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.396d35ca.chunk.js","sourcesContent":["import React,{ useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories,categories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handInputChange = (e) => {\r\n        console.log(e.target.value)\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n\r\n            setCategories([inputValue,...categories]);\r\n            setInputValue('');\r\n            //tambien se puede llamar asi haciendo un callback de la funcion setCategories\r\n            //setcategories( cats => [...cats, inputValue]);\r\n        }\r\n        console.log('Submit hecho');\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type='text'\r\n                    value={inputValue}\r\n                    onChange={handInputChange}\r\n                />\r\n            </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    \r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=C9XbWRKLREnHgd8hRDzn4DEBiQlnhSiQ`\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id,title,url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n    console.log(loading)\r\n    \r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n\r\n            { loading  && <p className='animate__animated animate__flash'>Loading</p> }\r\n\r\n            \r\n             <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            img={img}\r\n                            {...img} />\r\n                    ))\r\n                }\r\n            </div> \r\n        </>\r\n\r\n    )\r\n}\r\n\r\n","import { useState,useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n\r\n    },[category])\r\n\r\n   \r\n\r\n    return state; //{data:[], loading: true};\r\n    \r\n}","import React,{useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball Z'];\r\n    const [categories, setCategories] = useState(['Dragon Ball Z']);\r\n\r\n    /*  const handleAdd = () => {\r\n        return setcategories( [...categories, '7 Pecados capitales']);\r\n        setcategories( cats => [...cats, '7 Pecados capitales']);\r\n        \r\n    }  */\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory \r\n            setCategories={setCategories} \r\n            categories={categories}\r\n            />\r\n            <hr/>\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                { \r\n                    categories.map( category =>(\r\n                        <GifGrid\r\n                            key={ category }\r\n                            category={ category }\r\n                         />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {GifExpertApp} from '../src/gifExpertApp'\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}